import { API_ENDPOINTS } from "../../../constants/apiEndpoints";
import {
  BluefinXTx,
  SponsorRequest,
  SponsorResponse,
  SwapResponse,
} from "./types";

const request = async <T = any>(path: string, body: any) => {
  const res = await fetch(`${API_ENDPOINTS.MAIN}/${path}`, {
    method: "POST",
    body: JSON.stringify(body),
    headers: {
      "Content-Type": "application/json",
    },
  });
  return res.json() as T;
};
export const sponsorBluefinX = async (body: SponsorRequest) => {
  return await request<SponsorResponse>("bluefinx/sponsor", body);
};

/**
 * Request BluefinX for signing sponsored tx and execute it
 *
 * @Warning
 * User must use this function to execute BluefinX tx, otherwise the tx will be rejected by BluefinX contract
 * @param tx - BluefinX tx which is generated by `buildTx`
 * @param signature - user signature after signing the transaction
 * @returns
 */
export const executeBluefinTx = async (tx: BluefinXTx, signature: string) => {
  return await request<SwapResponse>("bluefinx/swap", {
    quoteId: tx.quoteId,
    txBytes: tx.txBytes,
    signature,
  });
};
